# doc: https://goframe.org/pages/viewpage.action?pageId=44449486
server:
  name: "devinggo_1" # 当前服务名称，英文字母，websocket分布式区分服务
  address: ":8070"
  keepAlive: true # 是否开启Keep-Alive功能. 默认true
  idleTimeout: "60s" # 仅当Keep-Alive开启时有效, 请求闲置时间. 默认为60秒
  maxHeaderBytes: "10240" # 请求Header大小限制(Byte). 默认为10KB
  clientMaxBodySize: "20MB" # 客户端提交的Body大小限制, 同时也影响文件上传大小, 默认设置为8MB
  dumpRouterMap: false # 是否在Server启动时打印所有的路由列表. 默认为true
  serverAgent: "devinggo HTTP Server" # 服务端Agent信息. 默认为"GoFrame HTTP Server"
  serverRoot:  "resource/public"
  # API文档
  openapiPath: "/api.json"
  swaggerPath: "/swagger"

  # 优雅关闭服务的超时时间, 如果超过这里设定的时间请求还没有处理完, 就直接关闭服务
  # NOTE: 优雅关闭服务的特性是默认开启的, 和平滑重启的配置无关
  gracefulShutdownTimeout: 10 # 默认 5秒, 建议根据实际业务情况调整

  # 平滑重启
  # NOTE: 不建议使用此特性, 特别是通过systemd、supervisor管理进程的场景, 或容器化场景, 不要开启此特性
  graceful: false # 是否开启平滑重启特性, 开启时将会在本地增加10000的本地TCP端口用于进程间通信. 默认false. 平滑重启: kill -SIGUSR1 进程ID
  gracefulTimeout: 10 # 父进程在平滑重启后多少秒退出, 默认2秒. 若请求耗时大于该值, 可能会导致请求中断

  # 服务日志(包括访问日志和server错误日志)
  logPath: "logs/" # 日志文件存储目录路径, 建议使用绝对路径. 默认为空, 表示关闭
  logStdout: true # 日志是否输出到终端. 默认为true
  errorStack: true # 当Server捕获到异常时是否记录堆栈信息到日志中. 默认为true
  errorLogEnabled: true # 是否记录异常日志信息到日志中. 默认为true
  errorLogPattern: "error-{Ymd}.log" # 异常错误日志文件格式. 默认为"error-{Ymd}.log"
  accessLogEnabled: true # 是否记录访问日志(包含异常的访问日志). 默认为false
  accessLogPattern: "access-{Ymd}.log" # 访问日志文件格式. 默认为"access-{Ymd}.log"

  # 针对服务日志的扩展配置
  logger:
    file: "{Ymd}.log" # 这里只记录server启动过程中gf默认打印的日志, 默认 {Y-m-d}.log; 日志所在路径为server.logPath指定的目录
    #    ctxKeys: ["contextHTTPKey"]
    rotateExpire: "1d"
    rotateBackupExpire: "30d"
    rotateBackupLimit: 30
    rotateCheckInterval: "1h"

# 开发者通过g.Log()打印的通用日志, 对server服务日志无效
# doc: https://goframe.org/pages/viewpage.action?pageId=1114388
logger:
  path: "logs/" # 日志文件目录, 如果为空, 表示不记录到文件; 建议目录和server.logPath保持一致
  file: "{Ymd}.log" # 日志文件格式. 默认为 {Y-m-d}.log; 建议和server.logger.file保持一致
  level: "all" # DEBU < INFO < NOTI < WARN < ERRO < CRIT, 也支持ALL, DEV, PROD常见部署模式配置名称. level配置项字符串不区分大小写
  stStatus: 0 # 是否打印错误堆栈(1: enabled - default; 0: disabled). 如果开启, 使用g.Log().Error 将会打印错误堆栈
  #  ctxKeys: ["contextHTTPKey"] # 自动打印Context的变量到日志中. 默认为空
  stdout: true # 日志是否同时输出到终端. 默认true
  stdoutColorDisabled: false # 关闭终端的颜色打印. 默认false
  writerColorEnable: false # 日志文件是否带上颜色. 默认false, 表示不带颜色
  rotateExpire: "1d" # 多长时间切分一次日志
  rotateBackupExpire: "30d" # 删除超过多长时间的切分文件, 默认为0, 表示不备份, 切分则删除. 如果启用按时间备份, rotateBackupLimit 必须设置为一个相对较大的数
  rotateBackupLimit: 30 # 最多保留多少个切分文件, 但rotateBackupExpire的配置优先. 默认为0, 表示不备份, 切分则删除. 可以不设置rotateBackupExpire
  rotateCheckInterval: "1h" # 滚动切分的时间检测间隔, 一般不需要设置. 默认为1小时
  format: "" # "json" or other, NOTE: 此为自定义选项, 非gf提供, 也对server服务日志和sql日志生效
  worker:
    path:    "logs/worker"
# doc: https://goframe.org/pages/viewpage.action?pageId=1114245
database:
  # sql日志
  logger:
    path: "logs/"
    file: "sql-{Ymd}.log"
    level: "all"
    stStatus: 1
    stdout: true
    #    ctxKeys: ["contextHTTPKey"]
    rotateExpire: "1d"
    rotateBackupExpire: "30d"
    rotateBackupLimit: 30
    rotateCheckInterval: "1h"

  # 默认分组
  default:
    link: "mysql:devinggo:mysql_zbCA5h@tcp(db-mysql-8adauv:3306)/devinggo?loc=Local&parseTime=true&charset=utf8mb4&multiStatements=true"
    debug: true # 默认 false

# doc: https://goframe.org/pages/viewpage.action?pageId=1114217
redis:
  default:
    address: db-redis-qftqfj:6379
    pass: "redis_d5KQds"
    user: "default"
    # 是否强制设置为集群工作模式, 默认值：false.
    # NOTE: 当address是单个endpoint的集群时，系统会自动判定为单实例模式，这时需要设置此项为true.
    cluster: false
    # 数据库索引(0-15), 默认值: 0.
    # NOTE: redis cluster 不支持index, 将自动忽略该配置.
    db: 0
    # 连接最长存活时间, 默认值: 30s, 建议设置的长一些.
    # 建立连接后, 可用此连接进行多次reids请求,
    # 从建立连接开始计算, 只要超过这个时间就会自动断开连接,
    # 就算此时有redis请求也会先关闭当前连接, 然后重新建一个新的连接,
    # 除非请求是一个阻塞式请求, 比如: BLPop等, 此时连接将始终保持,
    # 直到从队列读取到数据才会断开连接.
    maxConnLifetime: 30m
    # 连接最大空闲时间, 默认值: 10s;
    # 只要连接空闲(没有新请求)超过idleTimeout后, 就会断开连接.
    # 此值应该小于maxConnLifetime, 才有实际意义.
    idleTimeout: 10m
  cache:
    address: db-redis-qftqfj:6379
    pass: "redis_d5KQds"
    user: "default"
    db: 1
    minIdle: 10
    maxIdle: 1000
    maxActive: 5000
    idleTimeout: 600s
    waitTimeout: 30s
    dialTimeout: 30s
    readTimeout: 30s
    writeTimeout: 30s
  websocket:
    address: db-redis-qftqfj:6379
    pass: "redis_d5KQds"
    user: "default"
    db: 7
    minIdle: 10
    maxIdle: 1000
    maxActive: 5000
    idleTimeout: 600s
    waitTimeout: 30s
    dialTimeout: 30s
    readTimeout: 30s
    writeTimeout: 30s

jaeger:
  enable: false
  serviceName: devinggo
  udpEndpoint: tool-jaeger-nuqjzf:6831

# 以下为扩展配置
upload:
  dir: "uploads" # 上传文件在/resource/public目录下保存目录

worker:
  location: "Asia/Shanghai"
  shutdownTimeout: 30s
  concurrency: 20
  queues:
    - critical: 6
    - default: 3
    - low: 1
  redis:
    address: db-redis-qftqfj:6379
    pass: "redis_d5KQds"
    user: "default"
    db: 2
    dialTimeout: 30s
    readTimeout: 30s
    writeTimeout: 30s

token:
  secretKey: "devinggohello123"                  # 令牌加密秘钥，考虑安全问题生产环境中请修改默认值
  expires: 604800                        # 令牌有效期，单位：秒。默认7天
  autoRefresh: true                      # 是否开启自动刷新过期时间， false|true 默认为true
  refreshInterval: 86400                 # 刷新间隔，单位：秒。必须小于expires，否则无法触发。默认1天内只允许刷新一次
  maxRefreshTimes: 30                    # 最大允许刷新次数，-1不限制。默认30次
  multiLogin: true                       # 是否允许多端登录， false|true 默认为tru

settings:
  superAdminId: 1 # 超级管理员ID
  initPassword: "123456" # 超级管理员初始密码
  enableGlobalDbCache: false # 是否开启全局数据库缓存，默认false
  logSaveResponseData: true # 是否记录响应数据到日志中，默认true
  aesKey: "1234567890123456" # AES加密密钥，跟web/admin项目VITE_APP_AES_KEY保持一致
  cors:
    allowDomain: "*" # 允许的域名，默认允许所有
    allowHeaders: "X-App-Id,X-Tenant-Id"
  snowflake:
    workerId: 1 # 机器ID